# name: Deploy to GitHub Pages  # 工作流的名称

# on:
#   push:
#     branches:
#       - main  # 当推送到 main 分支时触发此工作流

# jobs:
#   build-deploy:
#     runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境运行此作业

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2  # 检出代码，获取仓库内容到工作目录

#       - name: Set up Node.js
#         uses: actions/setup-node@v2  # 设置 Node.js 环境
#         with:
#           node-version: '20'  # 使用 Node.js 版本 20

#       - name: Install dependencies
#         run: npm install  # 安装项目的 npm 依赖

#       - name: Build project
#         run: npm run build:prod  # 运行构建命令，生成生产环境的静态文件

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3  # 使用 peaceiris/actions-gh-pages 插件将内容部署到 GitHub Pages
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 提供的访问令牌进行部署
#           publish_dir: ./dist  # 指定包含静态内容的目录，这里是 Vite 默认的构建输出目录
#           publish_branch: gh-pages  # 部署到 gh-pages 分支



# 将静态内容部署到 GitHub Pages 的简易工作流程
name: Deploy static content to Pages

on:
  # 仅在推送到默认分支时运行。
  push:
    branches: ['main']  # 当推送到 main 分支时触发工作流

  # 这个选项可以使你手动在 Action tab 页面触发工作流
  workflow_dispatch:  # 允许在 GitHub Actions 页面手动触发此工作流

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages。
permissions:
  contents: read  # 允许读取仓库内容
  pages: write  # 允许写入 GitHub Pages
  id-token: write  # 允许使用身份令牌进行操作

# 允许一个并发的部署
concurrency:
  group: 'pages'  # 并发组名称
  cancel-in-progress: true  # 如果有新的部署请求，取消正在进行的部署

jobs:
  # 单次部署的工作描述
  deploy:
    environment:
      name: github-pages  # 部署的环境名称
      url: ${{ steps.deployment.outputs.page_url }}  # 部署后的页面 URL
    runs-on: ubuntu-latest  # 在最新版本的 Ubuntu 环境中运行作业
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # 检出代码仓库

      - name: Set up Node.js
        uses: actions/setup-node@v4  # 设置 Node.js 环境
        with:
          node-version: 20  # 使用 Node.js 版本 20
          cache: 'npm'  # 启用 npm 缓存

      - name: Install dependencies
        run: npm ci  # 安装项目依赖

      - name: Build project
        run: npm run build  # 执行构建命令，生成静态文件

      - name: Setup Pages
        uses: actions/configure-pages@v4  # 配置 GitHub Pages

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3  # 上传构建生成的静态文件
        with:
          path: './dist'  # 指定包含静态文件的目录

      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v3  # 使用 peaceiris/actions-gh-pages 插件进行部署
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 提供的访问令牌
          publish_dir: './dist'  # 指定要发布的目录
          publish_branch: gh-pages  # 部署到 gh-pages 分支
